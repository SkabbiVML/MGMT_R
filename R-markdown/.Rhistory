gseaplot(goGSEA_ALL, by = "all", title = goGSEA_ALL$Description[7], geneSetID = 7)
dotplot(keggGSEA, showCategory=20, split = ".sign",label_format = 70)+
facet_grid(.~.sign, labeller = labeller(.sign = c("Stiff","Soft")))+
ggtitle("Dotplot for KEGG-GSEA")
keggGSEA <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
#nPerm        = 1000,
minGSSize    = 20,
pvalueCutoff = 0.01,
verbose      = FALSE)
# KEGG over-representation test
# Input ID type can be kegg, ncbi-geneid, ncbi-proteinid or uniprot. An example can be found in https://guangchuangyu.github.io/2016/05/convert-biological-id-with-kegg-api-using-clusterprofiler/.
options(clusterProfiler.download.method = "wininet")
keggGSEA <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
#nPerm        = 1000,
minGSSize    = 20,
pvalueCutoff = 0.01,
verbose      = FALSE)
keggGSEA <- setReadable(keggGSEA, OrgDb = org.Hs.eg.db, keyType = "ENTREZID"
keggGSEA <- setReadable(keggGSEA, OrgDb = org.Hs.eg.db, keyType = "ENTREZID")
dotplot(keggGSEA, showCategory=20, split = ".sign",label_format = 70)+
facet_grid(.~.sign, labeller = labeller(.sign = c("Stiff","Soft")))+
ggtitle("Dotplot for KEGG-GSEA")
dotplot(keggGSEA, showCategory=20, split = ".sign",label_format = 70)+
facet_grid(.~.sign)+
ggtitle("Dotplot for KEGG-GSEA")
all_results_MGMT <- read.csv("D:/MGMT/Results/Aggregated_MGMT_07102022.csv", row.names = 1)
library(tidyr)
library(dplyr)
library(readr)
library(corrplot)
library(tibble)
library(pheatmap)
library(RColorBrewer)
library(viridis)
all_results_MGMT_full <- read.csv("D:/MGMT/Results/Aggregated_MGMT_07102022.csv", row.names = 1)
# Trim off Dataset,call numbers and features. add these back for annotation of the plots
all_results_MGMT <- all_results_MGMT_full[,c(2:3,6)]
Metsum_ROI_long <- all_results_MGMT %>% pivot_wider(names_from = c(Pos), values_from = Percent_Methylated)
Metsum_ROI_long <- column_to_rownames(Metsum_ROI_long,var="Sample")
library(Hmisc)
to_keep <- rownames(Metsum_ROI_long[rowSums(is.na(Metsum_ROI_long))< 2,])
Metsum_ROI_long <- Metsum_ROI_long[to_keep,]
Metsum_t <- as.data.frame(t(Metsum_ROI_long))
Metsum_t_impute <- impute(Metsum_t, median)
Metsum_ROI_long <- as.data.frame(t(Metsum_t_impute))
##########
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
View(Metsum_ROI_long)
all_results_MGMT_full <- read.csv("D:/MGMT/Results/Aggregated_MGMT_08102022.csv", row.names = 1)
all_results_MGMT <- all_results_MGMT %>% filter(Calls_num > 9)
# Trim off Dataset,call numbers and features. add these back for annotation of the plots
all_results_MGMT <- all_results_MGMT_full[,c(2:3,6)]
Metsum_ROI_long <- all_results_MGMT %>% pivot_wider(names_from = c(Pos), values_from = Percent_Methylated)
Metsum_ROI_long <- column_to_rownames(Metsum_ROI_long,var="Sample")
#### Some of the samples have missing values, mostly due to low coverage
#### There are a few that have decent coverage and only one missing value that
#### means they have to be dropped from downstream analysis.
#### I've chosen to keep samples that only have a single missing value and
#### impute the missing value by the median methylation of the entire sample.
#### This can be discussed
# I've also run this with only complete cases which excludes a sample if there is a single NA
# somewhere in the data. I felt this was too stringent as is threw out some good samples
# Metsum_ROI_long[complete.cases(Metsum_ROI_long),]
library(Hmisc)
to_keep <- rownames(Metsum_ROI_long[rowSums(is.na(Metsum_ROI_long))< 2,])
Metsum_ROI_long <- Metsum_ROI_long[to_keep,]
Metsum_t <- as.data.frame(t(Metsum_ROI_long))
Metsum_t_impute <- impute(Metsum_t, median)
Metsum_ROI_long <- as.data.frame(t(Metsum_t_impute))
##########
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
Radium <- read.csv("D:/MGMT/Results/Radium_MGMT_Methylation_summary.csv", header = T, row.names = 1)
VML <- read.csv("D:/MGMT/Results/VML_MGMT_Methylation_summary.csv", header = T, row.names = 1)
View(VML)
# ### Combining VML and Radium Samples
Metsum_t2 <- rbind(VML[c(6:nrow(VML)),], Radium[c(6:nrow(Radium)),])
colnames(Radium) <- c(-6:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9"))
colnames(VML) <- c(-6:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9"))
# ### Combining VML and Radium Samples
Metsum_t2 <- rbind(VML[c(6:nrow(VML)),], Radium[c(6:nrow(Radium)),])
Metsum_t2_names <- rownames(Metsum_t2)
Metsum_t2 <- sapply(Metsum_t2,as.numeric)
View(Metsum_t2)
rownames(Metsum_t2) <- Metsum_t2_names #
########## Filtering MEDIUM and HIGH coverage samples
MGMT_RunSum <- read.csv("D:/MGMT/SampleMetadata/MGMT_RunSum.csv", sep = ",", header = T) # Ghibli
mat_col <- all_results_MGMT_full[,c(3,7)]
mat_col$Pos <- as.factor(mat_col$Pos)
mat_col <- mat_col %>% group_by(Pos)
mat_col <- mat_col %>% group_by(Pos,feature)
mat_col <- mat_col %>% group_by(Pos,feature) %>% summarise()
mat_col <- all_results_MGMT_full[,c(3,7)]
mat_col$Pos <- as.factor(mat_col$Pos)
mat_col <- mat_col %>%  summarise()
mat_col <- all_results_MGMT_full[,c(3,7)]
mat_col$Pos <- as.factor(mat_col$Pos)
mat_col <- mat_col %>%  group_by(Pos,feature) %>% summarise()
View(mat_col)
rownames(mat_col) <- colnames(Metsum_ROI_long)
View(MGMT_RunSum)
# sample annotation
row_anno <- MGMT_RunSum[,c("Sample_ID","Series","Pyro_Methylation_Status")]
# sample annotation
row_anno <- unique(MGMT_RunSum[,c("Sample_ID","Series","Pyro_Methylation_Status")])
View(row_anno)
row_anno <- column_to_rownames(row_anno, var="Sample_ID")
rownames(row_anno) <- NULL
row_anno <- column_to_rownames(row_anno, var="Sample_ID")
colnames(row_anno) <- c("Series", "Meth_Status")
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = NA,
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 3,
fontsize_row = 5,
legend = T,
legend_breaks = seq(0,100,10),
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%"),
annotation_col = mat_col,
annotation_row = row_anno,
#annotation_colors = ann_colors,
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = NA,
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 3,
fontsize_row = 5,
legend = T,
legend_breaks = seq(0,100,10),
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%"),
annotation_col = mat_col,
annotation_row = row_anno
#annotation_colors = ann_colors,
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = NA,
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 3,
fontsize_row = 5,
legend = T,
legend_breaks = seq(0,100,10),
# annotation_col = mat_col,
# annotation_row = row_anno,
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
#annotation_colors = ann_colors,
)
to_keep <- rownames(Metsum_ROI_long[rowSums(is.na(Metsum_ROI_long))< 2,])
Metsum_ROI_long <- Metsum_ROI_long[to_keep,]
Metsum_t <- as.data.frame(t(Metsum_ROI_long))
Metsum_t_impute <- impute(Metsum_t, median)
Metsum_ROI_long <- as.data.frame(t(Metsum_t_impute))
all_results_MGMT <- all_results_MGMT %>% filter(Calls_num > 9)
# Trim off Dataset,call numbers and features. add these back for annotation of the plots
all_results_MGMT <- all_results_MGMT_full[,c(2:3,6)]
Metsum_ROI_long <- all_results_MGMT %>% pivot_wider(names_from = c(Pos), values_from = Percent_Methylated)
Metsum_ROI_long <- column_to_rownames(Metsum_ROI_long,var="Sample")
#### Some of the samples have missing values, mostly due to low coverage
#### There are a few that have decent coverage and only one missing value that
#### means they have to be dropped from downstream analysis.
#### I've chosen to keep samples that only have a single missing value and
#### impute the missing value by the median methylation of the entire sample.
#### This can be discussed
# I've also run this with only complete cases which excludes a sample if there is a single NA
# somewhere in the data. I felt this was too stringent as is threw out some good samples
# Metsum_ROI_long[complete.cases(Metsum_ROI_long),]
library(Hmisc)
to_keep <- rownames(Metsum_ROI_long[rowSums(is.na(Metsum_ROI_long))< 2,])
Metsum_ROI_long <- Metsum_ROI_long[to_keep,]
Metsum_t <- as.data.frame(t(Metsum_ROI_long))
Metsum_t_impute <- impute(Metsum_t, median)
Metsum_ROI_long <- as.data.frame(t(Metsum_t_impute))
#### renaming chromosome position to CpG number
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
corrplot(cor(Metsum_ROI_long),
method = "color",
order = "original",
#hclust.method = "ward.D",
tl.cex = 0.4,
tl.col = 'black')
setwd("D:/MGMT/R-markdown")
all_results_MGMT_full <- read.csv("Data/Aggregated_MGMT_24102022.csv", row.names = 1)
library(tidyr)
library(dplyr)
library(readr)
library(corrplot)
library(tibble)
library(pheatmap)
library(RColorBrewer)
library(viridis)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Metsum_ROI_long <- read.csv("Data/Metsum_ROI_long.csv")
Metsum_ROI_long <- read.csv("Data/Metsum_ROI_long.csv", header = T)
View(Metsum_ROI_long)
# Trim off Dataset,call numbers and features. add these back for annotation of the plots
all_results_MGMT <- all_results_MGMT_full[,c(2:3,6)]
Metsum_ROI_long <- all_results_MGMT %>% pivot_wider(names_from = c(Pos), values_from = Percent_Methylated)
Metsum_ROI_long <- column_to_rownames(Metsum_ROI_long,var="Sample")
library(Hmisc)
to_keep <- rownames(Metsum_ROI_long[rowSums(is.na(Metsum_ROI_long))< 2,])
Metsum_ROI_long <- Metsum_ROI_long[to_keep,]
Metsum_t <- as.data.frame(t(Metsum_ROI_long))
Metsum_t_impute <- impute(Metsum_t, median)
Metsum_ROI_long <- as.data.frame(t(Metsum_t_impute))
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
View(Metsum_ROI_long)
write.csv(Metsum_ROI_long,"Data/Metsum_ROI_long.csv", header = T)
?write.csv
write.csv(Metsum_ROI_long,"Data/Metsum_ROI_long.csv", col.names = T, row.names = T)
Metsum_ROI_long <- read.csv("Data/Metsum_ROI_long.csv", header = T)
View(Metsum_ROI_long)
Metsum_ROI_long <- read.csv("Data/Metsum_ROI_long.csv", header = T, row.names = 1)
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
library(corrplot)
Metsum_ROI_long <- read.csv("Data/Metsum_ROI_long.csv", header = T, row.names = 1)
colnames(Metsum_ROI_long) <- c(-7:-1, 1:98,c("+1","+2", "+3","+4", "+5", "+6", "+7", "+8", "+9", "+10"))
# correlation of CpGs
corrplot(cor(Metsum_ROI_long),
method = "color",
order = "original",
#hclust.method = "ward.D",
tl.cex = 0.4,
tl.col = 'black')
mat_col <- all_results_MGMT_full[,c(3,7)]
mat_col$Pos <- as.factor(mat_col$Pos)
mat_col <- mat_col %>%  group_by(Pos,feature) %>% summarise()
mat_col <- data.frame(Feature =mat_col$feature)
rownames(mat_col) <- colnames(Metsum_ROI_long)
row_anno <- unique(MGMT_RunSum[,c("Sample_ID","Series","Pyro_Methylation_Status")])
rownames(row_anno) <- NULL
row_anno <- column_to_rownames(row_anno, var="Sample_ID")
colnames(row_anno) <- c("Series", "Meth_Status")
row_anno$Series <- gsub("-","_",row_anno$Series)
load("Data/DotplotData.RData")
View(MGMT_RunSum)
MGMT_RunSum <- MGMT_RunSum %>% filter(Comment != "Fail")
MGMT_RunSum <- MGMT_RunSum %>%
mutate(Hits_ratio = 100*On_target_seqs/Read_number) %>%
filter(Comment != "Fail" & On_target_seqs > 1) %>%
group_by(Series) %>%
mutate(Series_median=median(On_target_seqs)) %>%
group_by(Comment) %>%
mutate(Comment_median=median(On_target_seqs)) %>%
group_by(Series,Comment) %>%
mutate(Series_Comment_median=median(On_target_seqs)) %>%
group_by(Series,Comment) %>%
mutate(Series_Comment_mean=mean(On_target_seqs)) %>%
group_by(Pyro_Methylation_Status) %>%
mutate(Reads_per_status_median = median(On_target_seqs)) %>%
group_by(Series,Pyro_Methylation_Status)%>%
mutate(Reads_per_status_series_median = median(On_target_seqs))%>%
filter(Pyro_Methylation_Status != "Unknown")
MGMT_RunSum$Series_Comment_mean <- as.numeric(round(MGMT_RunSum$Series_Comment_mean,1))
MGMT_RunSum$Reads_per_status_series_median <- as.numeric(round(MGMT_RunSum$Reads_per_status_series_median,1))
MGMT_RunSum$Series <- gsub("Radium1","Radium",MGMT_RunSum$Series)
MGMT_RunSum$Series <- gsub("Radium2","Radium",MGMT_RunSum$Series)
MGMT_RunSum$Comment <- gsub("barcoded","Barcoded",MGMT_RunSum$Comment)
View(MGMT_RunSum)
# sample annotation
row_anno <- unique(MGMT_RunSum[,c("Sample_ID","Series","Pyro_Methylation_Status")])
rownames(row_anno) <- NULL
row_anno <- column_to_rownames(row_anno, var="Sample_ID")
colnames(row_anno) <- c("Series", "Meth_Status")
row_anno$Series <- gsub("-","_",row_anno$Series)
ann_colors = list(
#Series = c(DenStem = "#33A02C", Radium1 = "#1F78B4", Radium2 = "#A6CEE3", Rapid_CNS = "#B2DF8A"),
Meth_Status = c(UnMethylated = "grey", Methylated = "black", Unknown ="white"),
Series = c(DenStem = "#33A02C",  Radium = "#1F78B4", Rapid_CNS = "#B2DF8A"),
Feature = c(Promoter = "#7FC97F", Exon1 = "#377EB8", Intron1 = "#FDC086")
)
save(mat_col,row_anno,ann_colors,"Data/Annotations.Rdata")
save(mat_col,row_anno,ann_colors,file = "Data/Annotations.Rdata")
library(pheatmap)
library(grid)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
load("Data/Annotations.Rdata")
library(pheatmap)
library(grid)
library(RColorBrewer)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
legend = T,
legend_breaks = seq(0,100,5),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 20, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
legend = T,
legend_breaks = seq(0,100,5),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
rev(brewer.pal(n = 20, name = "Spectral")
rev(brewer.pal(n = 20, name = "Spectral"))
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
fontsize = 6,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize = 6,
fontsize_col = 4,
fontsize_row = 4,
cellheight = 6,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
load("Data/Annotations.Rdata")
library(pheatmap)
library(grid)
library(RColorBrewer)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize_col = 4,
fontsize_row = 4,
fontsize = 6,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize = 6,
fontsize_col = 4,
fontsize_row = 4,
treeheight_col = 30,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize = 6,
fontsize_col = 4,
fontsize_row = 4,
treeheight_row = 30,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
# cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize = 6,
fontsize_col = 4,
fontsize_row = 4,
kmeans_k = 4,
treeheight_row = 30,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
pheatmap(Metsum_ROI_long,
cluster_rows = T,
cluster_cols = F,
clustering_method = "ward.D",
cutree_rows = 4,
scale = "none",
border_color = "grey",
color = rev(brewer.pal(n = 10, name = "Spectral")),
fontsize = 6,
fontsize_col = 4,
fontsize_row = 4,
# kmeans_k = 4,
show_rownames = F,
treeheight_row = 30,
legend = T,
legend_breaks = seq(0,100,10),
annotation_col = mat_col,
annotation_row = row_anno,
annotation_colors = ann_colors,
#main = "Sequence depth > 29,  (n=45)",
legend_labels = c("0%","10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")
)
