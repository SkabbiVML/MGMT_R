Methylation calling with nanopolish

Start by making a folder in MGMT with the sample ID. Create two subfolders in the sample ID folder, fast5 and fastq.

###### Data transfer ###########

Data from the sequencing device can then be transfered via rsync into these two folders. 

fast5_pass -> fast5

fastq_pass -> fastq

Only transfer the contents of fast5_pass and fastq_pass, not the folders themselves. This is done by typing "/" after the fast5_pass or fastq_pass.

Example:

rsync -r --progress --ignore-existing --verbose minit@10.42.0.1:/data/<Experiment_name>/<SAMPLE_ID>/<Flow-cell_ID>/fastq_pass/ /home/vml/MGMT/<SAMPLE_ID>/fastq   

######## Data preparation ########

All fast5 files should be in a folder as single reads. Large fast5 files can be unpackaged with ont_fast5_api (in python):

$ conda activate

(base)$ multi_to_single_fast5 --input_path ~/path/to/BIG.fast5 --save_path ~/path/to/directory --recursive

Example:

multi_to_single_fast5 --input_path fast5 --save_path fast5/singles --recursive


Basecalled sequences need to be in a single file called Basecalled.fastq. Concatenate all fastq files into 1 "Basecalled.fastq" file:

Example:

cat fastq/<Flow-cell_ID>_*.fastq > Basecalled.fastq


Refernce genome as fasta. for MGMT we only need chromosome 10. saved as reference.fasta in folder ~/MGMT/TEST

########## Analysis ##################

When running the analysis make sure it is done from the <SAMPLE_ID> subfolder in MGMT

cd ~/MGMT/<SAMPLE_ID>

1. Indexing single fast5 files to the basecalled sequences with Nanopolish

$ nanopolish index -d path/to/fast5 path/to/Basecalled.fastq

Example:

nanopolish index -d fast5/singles Basecalled.fastq


2. Align sequences to reference genome with minimap2

Example

minimap2 -a -x map-ont ~/MGMT/reference/reference.fasta Basecalled.fastq | samtools sort -T tmp -o <SAMPLE>.sorted.bam

3. Index the Bam file with samtools

Example:

samtools index <SAMPLE>.sorted.bam

The bam file can be viewed in igv to examine coverage

4. Methylation calling with Nanopolish

Example

nanopolish call-methylation -t 8 -r Basecalled.fastq -b <SAMPLE>.sorted.bam -g ~/MGMT/reference/reference.fasta -w "chr10:131,000,000-132,000,000" > <SAMPLE>_Methylation.tsv

5. Summarizing methylation results with python script

Example:

~/MGMT/nanopolish/scripts/calculate_methylation_frequency.py <SAMPLE>_Methylation.tsv > Summarized_methylation_<SAMPLE>.tsv

=======================

for quick visualization of coverage:

In terminal, type:

igv

drag-and-drop <SAMPLE>.sorted.bam into the viewer, zoom in on the MGMT promoter on chromosome 10

For quick visualization of methylation sites:

methplotlib -m <SAMPLE>_Methylation.tsv -n <SAMPLE_ID> -w "chr10:131,264,955-131,271,868" --dotsize 10 --binary

##################################################
######### Example of full analysis #################
###################################################
# cd into parent directory containing a fastq folder and fast5 folder. Thes should hold the relevant fastq and fast5 files.

# change <SAMPLE> into name of sample (parent directory)

multi_to_single_fast5 --input_path fast5 --save_path fast5/singles --recursive
cat fastq/*.fastq > Basecalled.fastq
nanopolish index -d fast5/singles Basecalled.fastq
minimap2 -a -x map-ont ~/MGMT/reference/reference.fasta Basecalled.fastq | samtools sort -T tmp -o <SAMPLE>.sorted.bam
samtools index <SAMPLE>.sorted.bam
nanopolish call-methylation -t 8 -r Basecalled.fastq -b <SAMPLE>.sorted.bam -g ~/MGMT/reference/reference.fasta -w "chr10:131,000,000-132,000,000" > <SAMPLE>_Methylation.tsv
~/MGMT/nanopolish/scripts/calculate_methylation_frequency.py <SAMPLE>_Methylation.tsv > Summarized_methylation_<SAMPLE>.tsv

#####################################################
#####################################################
#####################################################


######## in case of .vbz comression of fast5 files:
#Nanopolish does not work on vbz compressed files, they have to be re-packed to gzip

compress_fast5 -i path/to/fast5 --in_place -c gzip


###### Reduced Nanopolish window
# add the following tag to the call-methylation command:

--min-separation 9

